(()=>{"use strict";var n={917:(n,e,t)=>{t.d(e,{Z:()=>a});var o=t(537),r=t.n(o),i=t(645),A=t.n(i)()(r());A.push([n.id,"/*\nhtml5doctor.com Reset Stylesheet\nv1.6.1\nLast Updated: 2010-09-17\nAuthor: Richard Clark - http://richclarkdesign.com\nTwitter: @rich_clark\n*/\n\nhtml, body, div, span, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\nabbr, address, cite, code,\ndel, dfn, em, img, ins, kbd, q, samp,\nsmall, strong, sub, sup, var,\nb, i,\ndl, dt, dd, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, figcaption, figure,\nfooter, header, hgroup, menu, nav, section, summary,\ntime, mark, audio, video {\n    margin:0;\n    padding:0;\n    border:0;\n    outline:0;\n    font-size:100%;\n    vertical-align:baseline;\n    background:transparent;\n}\n\nbody {\n    line-height:1;\n}\n\narticle,aside,details,figcaption,figure,\nfooter,header,hgroup,menu,nav,section {\n    display:block;\n}\n\nnav ul {\n    list-style:none;\n}\n\nblockquote, q {\n    quotes:none;\n}\n\nblockquote:before, blockquote:after,\nq:before, q:after {\n    content:'';\n    content:none;\n}\n\na {\n    margin:0;\n    padding:0;\n    font-size:100%;\n    vertical-align:baseline;\n    background:transparent;\n}\n\n/* change colours to suit your needs */\nins {\n    background-color:#ff9;\n    color:#000;\n    text-decoration:none;\n}\n\n/* change colours to suit your needs */\nmark {\n    background-color:#ff9;\n    color:#000;\n    font-style:italic;\n    font-weight:bold;\n}\n\ndel {\n    text-decoration: line-through;\n}\n\nabbr[title], dfn[title] {\n    border-bottom:1px dotted;\n    cursor:help;\n}\n\ntable {\n    border-collapse:collapse;\n    border-spacing:0;\n}\n\n/* change border colour to suit your needs */\nhr {\n    display:block;\n    height:1px;\n    border:0;  \n    border-top:1px solid #cccccc;\n    margin:1em 0;\n    padding:0;\n}\n\ninput, select {\n    vertical-align:middle;\n}","",{version:3,sources:["webpack://./src/reset.css"],names:[],mappings:"AAAA;;;;;;CAMC;;AAED;;;;;;;;;;;;IAYI,QAAQ;IACR,SAAS;IACT,QAAQ;IACR,SAAS;IACT,cAAc;IACd,uBAAuB;IACvB,sBAAsB;AAC1B;;AAEA;IACI,aAAa;AACjB;;AAEA;;IAEI,aAAa;AACjB;;AAEA;IACI,eAAe;AACnB;;AAEA;IACI,WAAW;AACf;;AAEA;;IAEI,UAAU;IACV,YAAY;AAChB;;AAEA;IACI,QAAQ;IACR,SAAS;IACT,cAAc;IACd,uBAAuB;IACvB,sBAAsB;AAC1B;;AAEA,sCAAsC;AACtC;IACI,qBAAqB;IACrB,UAAU;IACV,oBAAoB;AACxB;;AAEA,sCAAsC;AACtC;IACI,qBAAqB;IACrB,UAAU;IACV,iBAAiB;IACjB,gBAAgB;AACpB;;AAEA;IACI,6BAA6B;AACjC;;AAEA;IACI,wBAAwB;IACxB,WAAW;AACf;;AAEA;IACI,wBAAwB;IACxB,gBAAgB;AACpB;;AAEA,4CAA4C;AAC5C;IACI,aAAa;IACb,UAAU;IACV,QAAQ;IACR,4BAA4B;IAC5B,YAAY;IACZ,SAAS;AACb;;AAEA;IACI,qBAAqB;AACzB",sourcesContent:["/*\nhtml5doctor.com Reset Stylesheet\nv1.6.1\nLast Updated: 2010-09-17\nAuthor: Richard Clark - http://richclarkdesign.com\nTwitter: @rich_clark\n*/\n\nhtml, body, div, span, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\nabbr, address, cite, code,\ndel, dfn, em, img, ins, kbd, q, samp,\nsmall, strong, sub, sup, var,\nb, i,\ndl, dt, dd, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, figcaption, figure,\nfooter, header, hgroup, menu, nav, section, summary,\ntime, mark, audio, video {\n    margin:0;\n    padding:0;\n    border:0;\n    outline:0;\n    font-size:100%;\n    vertical-align:baseline;\n    background:transparent;\n}\n\nbody {\n    line-height:1;\n}\n\narticle,aside,details,figcaption,figure,\nfooter,header,hgroup,menu,nav,section {\n    display:block;\n}\n\nnav ul {\n    list-style:none;\n}\n\nblockquote, q {\n    quotes:none;\n}\n\nblockquote:before, blockquote:after,\nq:before, q:after {\n    content:'';\n    content:none;\n}\n\na {\n    margin:0;\n    padding:0;\n    font-size:100%;\n    vertical-align:baseline;\n    background:transparent;\n}\n\n/* change colours to suit your needs */\nins {\n    background-color:#ff9;\n    color:#000;\n    text-decoration:none;\n}\n\n/* change colours to suit your needs */\nmark {\n    background-color:#ff9;\n    color:#000;\n    font-style:italic;\n    font-weight:bold;\n}\n\ndel {\n    text-decoration: line-through;\n}\n\nabbr[title], dfn[title] {\n    border-bottom:1px dotted;\n    cursor:help;\n}\n\ntable {\n    border-collapse:collapse;\n    border-spacing:0;\n}\n\n/* change border colour to suit your needs */\nhr {\n    display:block;\n    height:1px;\n    border:0;  \n    border-top:1px solid #cccccc;\n    margin:1em 0;\n    padding:0;\n}\n\ninput, select {\n    vertical-align:middle;\n}"],sourceRoot:""}]);const a=A},426:(n,e,t)=>{t.d(e,{Z:()=>a});var o=t(537),r=t.n(o),i=t(645),A=t.n(i)()(r());A.push([n.id,"body {\n    background: black;\n}\n\n.content {\n    font-family: Impact, Haettenschweiler, 'Arial Narrow Bold', sans-serif;\n    /* background-color: black; */\n    /* display: flex;\n    flex-direction: column;\n    justify-content: center; */\n}\n\n.content * {\n    margin: auto;\n}\n\n.testing {\n    color: white;\n}\n\n.imgSliderContainer {\n    /* position: relative; */\n    /* border: 1px solid green; */\n    width: 80%;\n    height: 800px;\n}\n\n.imgContainer {\n    position: relative;\n    display: flex;\n    /* border: 1px solid yellow; */\n    width: 80%;\n    height: 500px;\n    margin-top: 25px;\n}\n\n.innerImgContainer {\n    position: absolute;\n    top: 50%;\n    /* border: 1px solid brown; */\n    z-index: 0;\n    width: 100%;\n    height: 100%;\n    transform: translateY(-50%);\n}\n\n.hiddenImg {\n    display: none;\n}\n\n.visibleImgContainer {\n    position: absolute;\n    left: 50%;\n    top: 50%;\n    transform: translate(-50%, -50%);\n    /* border: 1px solid purple; */\n    /* background: grey; */\n    width: 80%;\n    height: 95%;\n    z-index: 1;\n}\n\n.imgLeftContainer, .imgRightContainer {\n    /* border: 1px solid green; */\n    width: 25%;\n    height: 480px;\n}\n\n.sliderImg {\n    position: relative;\n    width: 100%;\n    height: 100%; \n}\n\n.textCaption {\n    color: #00ff40;\n    font-size: 15px;\n    padding: 8px 12px;\n    position: absolute;\n    left: 50%;\n    transform: translateX(-50%);\n    bottom: 8px;\n    width: 80%;\n    text-align: center;\n}\n\n.numberLabel {\n    color: #00ff40;\n    font-size: 12px;\n    font-weight: bold;\n    padding: 8px 12px;\n    position: absolute;\n    top: 0;\n    z-index: 1;\n}\n\n.textCaption, .numberLabel {\n    background-color: rgba(105, 105, 105, 0.281);\n}\n\n.imgOrderContainer {\n    display: flex;\n    justify-content: center;\n    /* border: 1px solid pink; */\n    width: 50%;\n    height: 35px;\n    margin-top: 5px;\n}\n\n.indexCircleContainer {\n    margin: 2px;\n}\n\n.btnLeftContainer, .btnRightContainer {\n    position: absolute;\n    width: 64px;\n    height: 64px;\n    transition: 0.6 ease;\n    border-radius: 3px 0 0 3px;\n    z-index: 10;\n}\n\n.btnLeftContainer {\n    top: 50%;\n    transform: translateY(-50%);\n}\n\n.btnRightContainer {\n    top: 50%;\n    right: 0;\n    transform: translateY(-50%);\n}\n\n#btnRight, #btnLeft {\n    width: 64px;\n    height: 64px;\n    color: #00ff40;\n    background: none;\n    user-select:none;\n    border: none;\n}\n\n#btnLeft:hover {\n    background-color: rgba(0, 0, 0, 0.603);\n}\n#btnRight:hover {\n    background-color: rgba(0, 0, 0, 0.603);\n}\n\n\n.dot {\n    cursor: pointer;\n    height: 15px;\n    width: 15px;\n    background-color: rgb(139, 139, 139);\n    border-radius: 50%;\n    display: inline-block;\n    transition: background-color 0.6 ease;\n}\n\n.active, .dot:hover {\n    background-color: #00ff40;\n}\n\n.fade {\n    animation-name: fade;\n    animation-duration: 1.5s;\n    \n}\n\n@keyframes fade {\n    from{opacity: .4}\n    to{opacity: 1}\n}","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;IACI,iBAAiB;AACrB;;AAEA;IACI,sEAAsE;IACtE,6BAA6B;IAC7B;;8BAE0B;AAC9B;;AAEA;IACI,YAAY;AAChB;;AAEA;IACI,YAAY;AAChB;;AAEA;IACI,wBAAwB;IACxB,6BAA6B;IAC7B,UAAU;IACV,aAAa;AACjB;;AAEA;IACI,kBAAkB;IAClB,aAAa;IACb,8BAA8B;IAC9B,UAAU;IACV,aAAa;IACb,gBAAgB;AACpB;;AAEA;IACI,kBAAkB;IAClB,QAAQ;IACR,6BAA6B;IAC7B,UAAU;IACV,WAAW;IACX,YAAY;IACZ,2BAA2B;AAC/B;;AAEA;IACI,aAAa;AACjB;;AAEA;IACI,kBAAkB;IAClB,SAAS;IACT,QAAQ;IACR,gCAAgC;IAChC,8BAA8B;IAC9B,sBAAsB;IACtB,UAAU;IACV,WAAW;IACX,UAAU;AACd;;AAEA;IACI,6BAA6B;IAC7B,UAAU;IACV,aAAa;AACjB;;AAEA;IACI,kBAAkB;IAClB,WAAW;IACX,YAAY;AAChB;;AAEA;IACI,cAAc;IACd,eAAe;IACf,iBAAiB;IACjB,kBAAkB;IAClB,SAAS;IACT,2BAA2B;IAC3B,WAAW;IACX,UAAU;IACV,kBAAkB;AACtB;;AAEA;IACI,cAAc;IACd,eAAe;IACf,iBAAiB;IACjB,iBAAiB;IACjB,kBAAkB;IAClB,MAAM;IACN,UAAU;AACd;;AAEA;IACI,4CAA4C;AAChD;;AAEA;IACI,aAAa;IACb,uBAAuB;IACvB,4BAA4B;IAC5B,UAAU;IACV,YAAY;IACZ,eAAe;AACnB;;AAEA;IACI,WAAW;AACf;;AAEA;IACI,kBAAkB;IAClB,WAAW;IACX,YAAY;IACZ,oBAAoB;IACpB,0BAA0B;IAC1B,WAAW;AACf;;AAEA;IACI,QAAQ;IACR,2BAA2B;AAC/B;;AAEA;IACI,QAAQ;IACR,QAAQ;IACR,2BAA2B;AAC/B;;AAEA;IACI,WAAW;IACX,YAAY;IACZ,cAAc;IACd,gBAAgB;IAChB,gBAAgB;IAChB,YAAY;AAChB;;AAEA;IACI,sCAAsC;AAC1C;AACA;IACI,sCAAsC;AAC1C;;;AAGA;IACI,eAAe;IACf,YAAY;IACZ,WAAW;IACX,oCAAoC;IACpC,kBAAkB;IAClB,qBAAqB;IACrB,qCAAqC;AACzC;;AAEA;IACI,yBAAyB;AAC7B;;AAEA;IACI,oBAAoB;IACpB,wBAAwB;;AAE5B;;AAEA;IACI,KAAK,WAAW;IAChB,GAAG,UAAU;AACjB",sourcesContent:["body {\n    background: black;\n}\n\n.content {\n    font-family: Impact, Haettenschweiler, 'Arial Narrow Bold', sans-serif;\n    /* background-color: black; */\n    /* display: flex;\n    flex-direction: column;\n    justify-content: center; */\n}\n\n.content * {\n    margin: auto;\n}\n\n.testing {\n    color: white;\n}\n\n.imgSliderContainer {\n    /* position: relative; */\n    /* border: 1px solid green; */\n    width: 80%;\n    height: 800px;\n}\n\n.imgContainer {\n    position: relative;\n    display: flex;\n    /* border: 1px solid yellow; */\n    width: 80%;\n    height: 500px;\n    margin-top: 25px;\n}\n\n.innerImgContainer {\n    position: absolute;\n    top: 50%;\n    /* border: 1px solid brown; */\n    z-index: 0;\n    width: 100%;\n    height: 100%;\n    transform: translateY(-50%);\n}\n\n.hiddenImg {\n    display: none;\n}\n\n.visibleImgContainer {\n    position: absolute;\n    left: 50%;\n    top: 50%;\n    transform: translate(-50%, -50%);\n    /* border: 1px solid purple; */\n    /* background: grey; */\n    width: 80%;\n    height: 95%;\n    z-index: 1;\n}\n\n.imgLeftContainer, .imgRightContainer {\n    /* border: 1px solid green; */\n    width: 25%;\n    height: 480px;\n}\n\n.sliderImg {\n    position: relative;\n    width: 100%;\n    height: 100%; \n}\n\n.textCaption {\n    color: #00ff40;\n    font-size: 15px;\n    padding: 8px 12px;\n    position: absolute;\n    left: 50%;\n    transform: translateX(-50%);\n    bottom: 8px;\n    width: 80%;\n    text-align: center;\n}\n\n.numberLabel {\n    color: #00ff40;\n    font-size: 12px;\n    font-weight: bold;\n    padding: 8px 12px;\n    position: absolute;\n    top: 0;\n    z-index: 1;\n}\n\n.textCaption, .numberLabel {\n    background-color: rgba(105, 105, 105, 0.281);\n}\n\n.imgOrderContainer {\n    display: flex;\n    justify-content: center;\n    /* border: 1px solid pink; */\n    width: 50%;\n    height: 35px;\n    margin-top: 5px;\n}\n\n.indexCircleContainer {\n    margin: 2px;\n}\n\n.btnLeftContainer, .btnRightContainer {\n    position: absolute;\n    width: 64px;\n    height: 64px;\n    transition: 0.6 ease;\n    border-radius: 3px 0 0 3px;\n    z-index: 10;\n}\n\n.btnLeftContainer {\n    top: 50%;\n    transform: translateY(-50%);\n}\n\n.btnRightContainer {\n    top: 50%;\n    right: 0;\n    transform: translateY(-50%);\n}\n\n#btnRight, #btnLeft {\n    width: 64px;\n    height: 64px;\n    color: #00ff40;\n    background: none;\n    user-select:none;\n    border: none;\n}\n\n#btnLeft:hover {\n    background-color: rgba(0, 0, 0, 0.603);\n}\n#btnRight:hover {\n    background-color: rgba(0, 0, 0, 0.603);\n}\n\n\n.dot {\n    cursor: pointer;\n    height: 15px;\n    width: 15px;\n    background-color: rgb(139, 139, 139);\n    border-radius: 50%;\n    display: inline-block;\n    transition: background-color 0.6 ease;\n}\n\n.active, .dot:hover {\n    background-color: #00ff40;\n}\n\n.fade {\n    animation-name: fade;\n    animation-duration: 1.5s;\n    \n}\n\n@keyframes fade {\n    from{opacity: .4}\n    to{opacity: 1}\n}"],sourceRoot:""}]);const a=A},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",o=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),o&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),o&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,o,r,i){"string"==typeof n&&(n=[[null,n,void 0]]);var A={};if(o)for(var a=0;a<this.length;a++){var s=this[a][0];null!=s&&(A[s]=!0)}for(var d=0;d<n.length;d++){var l=[].concat(n[d]);o&&A[l[0]]||(void 0!==i&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=i),t&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=t):l[2]=t),r&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=r):l[4]="".concat(r)),e.push(l))}},e}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),i="/*# ".concat(r," */"),A=t.sources.map((function(n){return"/*# sourceURL=".concat(t.sourceRoot||"").concat(n," */")}));return[e].concat(A).concat([i]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,o=0;o<e.length;o++)if(e[o].identifier===n){t=o;break}return t}function o(n,o){for(var i={},A=[],a=0;a<n.length;a++){var s=n[a],d=o.base?s[0]+o.base:s[0],l=i[d]||0,c="".concat(d," ").concat(l);i[d]=l+1;var p=t(c),C={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==p)e[p].references++,e[p].updater(C);else{var u=r(C,o);o.byIndex=a,e.splice(a,0,{identifier:c,updater:u,references:1})}A.push(c)}return A}function r(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,r){var i=o(n=n||[],r=r||{});return function(n){n=n||[];for(var A=0;A<i.length;A++){var a=t(i[A]);e[a].references--}for(var s=o(n,r),d=0;d<i.length;d++){var l=t(i[d]);0===e[l].references&&(e[l].updater(),e.splice(l,1))}i=s}}},569:n=>{var e={};n.exports=function(n,t){var o=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var o="";t.supports&&(o+="@supports (".concat(t.supports,") {")),t.media&&(o+="@media ".concat(t.media," {"));var r=void 0!==t.layer;r&&(o+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),o+=t.css,r&&(o+="}"),t.media&&(o+="}"),t.supports&&(o+="}");var i=t.sourceMap;i&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),e.styleTagTransform(o,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},e={};function t(o){var r=e[o];if(void 0!==r)return r.exports;var i=e[o]={id:o,exports:{}};return n[o](i,i.exports,t),i.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var o in e)t.o(e,o)&&!t.o(n,o)&&Object.defineProperty(n,o,{enumerable:!0,get:e[o]})},t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),t.nc=void 0,(()=>{var n=t(379),e=t.n(n),o=t(795),r=t.n(o),i=t(569),A=t.n(i),a=t(565),s=t.n(a),d=t(216),l=t.n(d),c=t(589),p=t.n(c),C=t(917),u={};u.styleTagTransform=p(),u.setAttributes=s(),u.insert=A().bind(null,"head"),u.domAPI=r(),u.insertStyleElement=l(),e()(C.Z,u),C.Z&&C.Z.locals&&C.Z.locals;var g=t(426),h={};h.styleTagTransform=p(),h.setAttributes=s(),h.insert=A().bind(null,"head"),h.domAPI=r(),h.insertStyleElement=l(),e()(g.Z,h),g.Z&&g.Z.locals&&g.Z.locals;(n=>{const e=n.length,t=document.querySelector(".content"),o=document.createElement("div");o.classList.add("imgSliderContainer");const r=document.createElement("div");r.classList.add("imgContainer"),document.createElement("div").classList.add("visibleImgContainer");const i=document.createElement("div");i.classList.add("btnLeftContainer");const A=document.createElement("button");A.id="btnLeft",A.innerHTML="&#10094;";const a=document.createElement("div");a.classList.add("btnRightContainer");const s=document.createElement("button");s.id="btnRight",s.innerHTML="&#10095;";const d=document.createElement("div");d.classList.add("imgOrderContainer"),(()=>{for(let t=0;t<e;t++){let o=document.createElement("div");o.classList.add("innerImgContainer"),o.classList.add("hiddenImg"),o.classList.add("fade");let i=document.createElement("div");i.classList.add("numberLabel"),i.textContent=`${t+1} / ${e}`;let A=document.createElement("img");A.src=n[t],A.classList.add("sliderImg");let a=document.createElement("div");a.classList.add("textCaption"),a.textContent=`Caption Text ${t+1}`,o.appendChild(i),o.appendChild(A),o.appendChild(a),r.appendChild(o)}console.log(e)})(),(()=>{for(let n=0;n<e;n++){let e=document.createElement("div");e.classList.add("indexCircleContainer");let t=document.createElement("span");t.classList.add("dot"),t.id=n+1,t.addEventListener("click",(e=>{var o;e.stopPropagation(),console.log(`Clicked Dot for Slide ${t.id}!`),console.log(t.id),o=n+1,console.log(o),C(c=o)})),e.appendChild(t),d.appendChild(e)}})(),i.appendChild(A),r.appendChild(i),a.appendChild(s),r.appendChild(a),o.appendChild(r),o.appendChild(d),t.appendChild(o);let l,c=1;function p(n){C(c+=n)}function C(n){let e;null!=l&&clearTimeout(l);let t=document.querySelectorAll(".innerImgContainer"),o=document.getElementsByClassName("dot");for(console.log(n),n>t.length&&(c=1),n<1&&(c=t.length),e=0;e<t.length;e++)t[e].style.display="none";for(e=0;e<o.length;e++)o[e].classList.remove("active");t[c-1].style.display="block",o[c-1].classList.add("active"),console.log(t[c-1]),l=setTimeout((()=>{p(1)}),1e4)}C(c),A.addEventListener("click",(n=>{n.stopPropagation(),p(-1)})),s.addEventListener("click",(n=>{n.stopPropagation(),p(1)}))})(["../src/media/img1.jpg","../src/media/img2.jpg","../src/media/img3.jpg","../src/media/img4.jpg","../src/media/img5.jpg","../src/media/img6.jpg","../src/media/img7.jpg"])})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,